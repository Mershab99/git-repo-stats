
openapi: 3.0.3
info:
  title: Git Repo Analyzer API
  version: 0.1.0
  description: |
    A backend service that fetches Git commit history and metadata across all branches.
    Designed for showcasing portfolio work in Go (Echo + OpenAPI).

servers:
  - url: http://localhost:8080

paths:
  /status:
    get:
      summary: Liveness probe endpoint
      description: Returns 200 OK if the service is alive.
      responses:
        '200':
          description: Alive
          content:
            application/json:
              schema:
                type: object
                example:
                  status: ok



  /commits:
    post:
      summary: Get commits from one or more repositories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitsRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/CommitsRequest'
      responses:
        '200':
          description: List of commits grouped by repo
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/CommitInfo'
        '400':
          description: Invalid input
        '500':
          description: Server error
  /commits/heatmap:
    post:
      summary: Get commits from one or more repositories and return in a cal-heatmap compatible format
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitsRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/CommitsRequest'
      responses:
        '200':
          description: List of commits grouped by repo
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/HeatmapData'
        '400':
          description: Invalid input
        '500':
          description: Server error

components:
  schemas:
    CommitsRequest:
      type: object
      required: [days, repositories]
      properties:
        days:
          type: integer
          example: 30
        repositories:
          type: array
          items:
            $ref: '#/components/schemas/RepoConfig'

    RepoConfig:
      type: object
      required: [url]
      properties:
        url:
          type: string
          format: uri
          example: https://github.com/example/repo
        auth:
          $ref: '#/components/schemas/Auth'

    Auth:
      type: object
      properties:
        token:
          type: string
        username:
          type: string
        password:
          type: string

    CommitInfo:
      type: object
      properties:
        hash:
          type: string
        author_name:
          type: string
        author_email:
          type: string
        timestamp:
          type: string
          format: date-time
        message:
          type: string

    HeatmapData:
      type: object
      properties:
        date:
          type: string
          format: date
        value:
          type: integer

